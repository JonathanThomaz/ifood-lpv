
CREATE DATABASE ifood;
USE ifood;

CREATE TABLE tipoConta (
  idTipoConta INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  tipo VARCHAR(45) NOT NULL 
  );


CREATE TABLE conta (
  idConta INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  login VARCHAR(45) NOT NULL,
  senha VARCHAR(45) NOT NULL,
  idTipoConta INT UNSIGNED NULL,
  CONSTRAINT idTipoConta 
  FOREIGN KEY (idTipoConta) REFERENCES tipoConta (idTipoConta) 
    ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE consumidor (
  idConsumidor INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(80) NOT NULL,
  CPF VARCHAR(11) NOT NULL,
  nascimento DATE NOT NULL,
  idConta INT UNSIGNED  NULL,
  CONSTRAINT idTipoConta 
  FOREIGN KEY (idConta) REFERENCES conta (idConta) 
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE cartao (
  idCartao INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  numero VARCHAR(45) NOT NULL,
  titular VARCHAR(45) NOT NULL,
  validade VARCHAR(45) NOT NULL,
  ativo TINYINT NOT NULL,
  aprovado TINYINT NOT NULL,
  idConsumidor INT UNSIGNED NULL,
  CONSTRAINT idConsumidor 
  FOREIGN KEY (idConsumidor) REFERENCES consumidor (idConsumidor)
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE contato (
  idContato INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  telefone VARCHAR(9) NOT NULL,
  ddd CHAR(2) NOT NULL,
  email VARCHAR(60) NOT NULL,
  telefoneComplementar VARCHAR(11) NULL,
  idConta INT UNSIGNED NOT NULL,
  CONSTRAINT idConta 
  FOREIGN KEY (idConta) REFERENCES conta (idConta)
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE endereco (
  idEndereco INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  rua VARCHAR(100) NOT NULL,
  bairro VARCHAR(60) NOT NULL,
  numero INT UNSIGNED NOT NULL,
  cep CHAR(8) NOT NULL,
  complemento VARCHAR(30) NULL,
  cidade VARCHAR(45) NOT NULL,
  estado CHAR(2) NOT NULL,
  pais CHAR(3) NOT NULL,
  idConta INT UNSIGNED NULL,
  CONSTRAINT idConta 
  FOREIGN KEY (idConta) REFERENCES conta (idConta)
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE loja (
  idLoja INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(45) NOT NULL,
  cnpj CHAR(14) NOT NULL,
  descricao TEXT NOT NULL,
  imagem VARCHAR(80) NOT NULL,
  idConta INT UNSIGNED NULL,
  CONSTRAINT idConta 
  FOREIGN KEY (idConta) REFERENCES conta (idConta) 
    ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE categoriaProduto (
  idCategoriaProduto INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  categoria VARCHAR(30) NOT NULL
);


CREATE TABLE produto (
  idProduto INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  preco DECIMAL(2) NOT NULL,
  nome VARCHAR(60) NOT NULL,
  disponivel TINYINT NOT NULL,
  descricao VARCHAR(150) NOT NULL,
  imagem VARCHAR(60) NOT NULL,
  idCategoriaProduto INT UNSIGNED NULL,
  idLoja INT UNSIGNED NULL,
  CONSTRAINT idCategoriaProduto
    FOREIGN KEY (idCategoriaProduto) REFERENCES categoriaProduto (idCategoriaProduto)
    ON DELETE NO ACTION ON UPDATE CASCADE,
  CONSTRAINT idLoja
    FOREIGN KEY (idLoja) REFERENCES loja (idLoja)
    ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE estadoPedido (
  idEstadoPedido INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  estado VARCHAR(25) NOT NULL,
  mensagem VARCHAR(50) NOT NULL
);


CREATE TABLE pedido (
  idPedido INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  valorProdutos DECIMAL(2) NOT NULL,
  valorFrete DECIMAL(2) NOT NULL,
  valorTotal DECIMAL(2) NOT NULL,
  estadoPagamento TINYINT NOT NULL,
  sePediuEntrega TINYINT NOT NULL,
  idEstadoPedido INT UNSIGNED NOT NULL,
  CONSTRAINT idEstadoPedido
    FOREIGN KEY (idEstadoPedido) REFERENCES estadoPedido (idEstadoPedido)
    ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE carrinho (
  idCarrinho INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  idProduto INT UNSIGNED  NULL,
  idPedido INT UNSIGNED NULL,
  quantidade INT NOT NULL,
  CONSTRAINT idProduto
    FOREIGN KEY (idProduto) REFERENCES produto (idProduto)
    ON DELETE NO ACTION ON UPDATE CASCADE,
  CONSTRAINT idPedido
    FOREIGN KEY (idPedido) REFERENCES pedido (idPedido)
    ON DELETE NO ACTION ON UPDATE CASCADE
);

